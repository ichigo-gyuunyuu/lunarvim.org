(self.webpackChunkLunarVim_com=self.webpackChunkLunarVim_com||[]).push([[261],{1369:(n,a,s)=>{"use strict";s.r(a),s.d(a,{data:()=>e});const e={key:"v-62d9645f",path:"/languages/c_cpp.html",title:"C/C++",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Install Syntax Highlighting",slug:"install-syntax-highlighting",children:[]},{level:2,title:"Install Language Server",slug:"install-language-server",children:[]},{level:2,title:"Formatters",slug:"formatters",children:[]},{level:2,title:"LSP Settings",slug:"lsp-settings",children:[]}],filePathRelative:"languages/c_cpp.md",git:{updatedTime:1628450509e3,contributors:[]}}},9086:(n,a,s)=>{"use strict";s.r(a),s.d(a,{default:()=>v});var e=s(6252);const t=(0,e.uE)('<h1 id="c-c" tabindex="-1"><a class="header-anchor" href="#c-c" aria-hidden="true">#</a> C/C++</h1><h2 id="install-syntax-highlighting" tabindex="-1"><a class="header-anchor" href="#install-syntax-highlighting" aria-hidden="true">#</a> Install Syntax Highlighting</h2><div class="language-vim ext-vim line-numbers-mode"><pre class="language-vim"><code><span class="token punctuation">:</span>TSInstall <span class="token keyword">c</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-vim ext-vim line-numbers-mode"><pre class="language-vim"><code><span class="token punctuation">:</span>TSInstall cpp\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="install-language-server" tabindex="-1"><a class="header-anchor" href="#install-language-server" aria-hidden="true">#</a> Install Language Server</h2><p>Install <code>clangd</code> language server</p><div class="language-vim ext-vim line-numbers-mode"><pre class="language-vim"><code><span class="token punctuation">:</span>LspInstall cpp\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',7),p=(0,e.Uk)("List of other "),l={href:"https://github.com/neovim/nvim-lspconfig/blob/master/CONFIG.md",target:"_blank",rel:"noopener noreferrer"},o=(0,e.Uk)("available language servers"),r=(0,e.Uk)(". If "),c=(0,e.Wm)("code",null,":LspInstall",-1),i=(0,e.Uk)(" does not have support for installing the language server, you need to install it separately."),u=(0,e.uE)('<h2 id="formatters" tabindex="-1"><a class="header-anchor" href="#formatters" aria-hidden="true">#</a> Formatters</h2><p><code>clangd</code> supports formatting. Optionally <code>uncrustify</code> and <code>clangd_format</code> can be used as a formatter. Optional formatter will disable language server formatter.</p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code>lvim<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>c<span class="token punctuation">.</span>formatters <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token punctuation">{</span>\n    exe <span class="token operator">=</span> <span class="token string">&quot;clangd_format&quot;</span><span class="token punctuation">,</span> <span class="token comment">-- can also be uncrustify</span>\n    args <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\nlvim<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>cpp<span class="token punctuation">.</span>formatters <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token punctuation">{</span>\n    exe <span class="token operator">=</span> <span class="token string">&quot;clangd_format&quot;</span><span class="token punctuation">,</span> <span class="token comment">-- can also be uncrustify</span>\n    args <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>The selected formatter must be installed separately.</p><h2 id="lsp-settings" tabindex="-1"><a class="header-anchor" href="#lsp-settings" aria-hidden="true">#</a> LSP Settings</h2><p>E.g. use of other language server:</p><div class="language-vim ext-vim line-numbers-mode"><pre class="language-vim"><code>lvim<span class="token operator">.</span>lang<span class="token operator">.</span><span class="token keyword">c</span><span class="token operator">.</span><span class="token builtin">lsp</span><span class="token operator">.</span>provider <span class="token operator">=</span> <span class="token string">&quot;&lt;LS identifier&gt;&quot;</span>\nlvim<span class="token operator">.</span>lang<span class="token operator">.</span><span class="token keyword">c</span><span class="token operator">.</span><span class="token builtin">lsp</span><span class="token operator">.</span>setup<span class="token operator">.</span>cmd <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;path to executable&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;arg1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;arg2&quot;</span> <span class="token punctuation">}</span>\nlvim<span class="token operator">.</span>lang<span class="token operator">.</span>cpp<span class="token operator">.</span><span class="token builtin">lsp</span><span class="token operator">.</span>provider <span class="token operator">=</span> <span class="token string">&quot;&lt;LS identifier&gt;&quot;</span>\nlvim<span class="token operator">.</span>lang<span class="token operator">.</span>cpp<span class="token operator">.</span><span class="token builtin">lsp</span><span class="token operator">.</span>setup<span class="token operator">.</span>cmd <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;path to executable&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;arg1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;arg2&quot;</span> <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>',7),g=(0,e.Wm)("code",null,"<LS identifier>",-1),d=(0,e.Uk)(" must be one supported by "),m=(0,e.Wm)("code",null,"nvim-lspconfig",-1),k=(0,e.Uk)(". "),b={href:"https://github.com/neovim/nvim-lspconfig/blob/master/CONFIG.md",target:"_blank",rel:"noopener noreferrer"},h=(0,e.Uk)("List of available LSP configs"),v={render:function(n,a){const s=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.j4)(e.HY,null,[t,(0,e.Wm)("p",null,[p,(0,e.Wm)("a",l,[o,(0,e.Wm)(s)]),r,c,i]),u,(0,e.Wm)("p",null,[g,d,m,k,(0,e.Wm)("a",b,[h,(0,e.Wm)(s)])])],64)}}}}]);